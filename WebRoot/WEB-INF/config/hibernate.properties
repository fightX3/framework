## hibernate  
hibernate.show_sql=true
hibernate.format_sql=false
hibernate.hbm2ddl.auto=update
#hibernate实体类配置文件加载
mappingLocations=classpath:com/**/entity/xml/*.hbm.xml
hibernate.bytecode.provider=cglib

## 数据相关的配置
#设置外连接抓取树的最大深度取值. 建议设置为0到3之间
hibernate.max_fetch_depth=3
#一个非零值，用来决定JDBC的获取量大小。(会调用calls Statement.setFetchSize()).
hibernate.jdbc.fetch_size=18
#一个非零值，会开启Hibernate使用JDBC2的批量更新功能取值. 建议值在 5 和 30之间。
hibernate.jdbc.batch_size=10

## hibernate cache
#一级缓存 
hibernate.cache.use_query_cache=true
hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider
#二级缓存
hibernate.cache.use_second_level_cache=true
org.hibernate.cache.ehcache_EhCacheRegionFactory=org.hibernate.cache.ehcache.EhCacheRegionFactory
#ehcache.xml缓存配置路径
hibernate.cache.provider_configuration_file_resource_path=/WEB-INF/config/ehcache.xml
##Hibernate分页出现 ResultSet may only be accessed in a forward direction 需要设置hibernate结果集滚动 
jdbc.use_scrollable_resultset =true
#事务管理配置的值使用短名称，不再使用完整的类名，jdbc代表org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl，jta代表org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl
hibernate.transaction.coordinator_class=jdbc


##如果使用JUnit进行测试：就要加上下面这句话 
#javax.persistence.validation.mode默认情况下是auto的，
#就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包  所以把它设置为none即可
#javax.persistence.validation.mode=none

##druid连接池设置
#初始化连接数量
hibernate.connection.initialSize=5
#最大并发连接数
hibernate.connection.maxActive=20
#最大空闲连接数
#hibernate.connection.maxIdle=3
#最小空闲连接数
hibernate.connection.minIdle=3
#配置获取连接等待超时的时间
hibernate.connection.maxWait=60000
#超过时间限制是否回收
hibernate.connection.removeAbandoned=true
#超过时间限制多长
hibernate.connection.removeAbandonedTimeout=180
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
hibernate.connection.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
hibernate.connection.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句
hibernate.connection.validationQuery=SELECT getDate();
#申请连接的时候检测
hibernate.connection.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
hibernate.connection.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 
hibernate.connection.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
hibernate.connection.poolPreparedStatements=true
hibernate.connection.maxPoolPreparedStatementPerConnectionSize=50
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：  监控统计用的filter:stat   日志用的filter:log4j  实际应用中添加  防御SQL注入的filter:wall 添加在最前面
hibernate.connection.filters=stat,slf4j

## MMSQLdatabase configuration
hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver
hibernate.connection.url=jdbc\:sqlserver\://127.0.0.1\:1433;databaseName\=framework
hibernate.connection.username=sccb
hibernate.connection.password=sccb
hibernate.dialect=org.hibernate.dialect.SQLServerDialect
## Oracle database configuration
#hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver
#hibernate.connection.url=jdbc\:oracle\:thin\:@localhost\:1521\:framework
#hibernate.connection.username=sccb
#hibernate.connection.password=sccb
#hibernate.dialect=org.hibernate.dialect.OracleDialect
## Mysql database configuration
#hibernate.connection.driver_class=com.mysql.jdbc.Driver
#hibernate.connection.url=jdbc\:mysql\://localhost/framework?characterEncoding=utf-8
#hibernate.connection.username=sccb
#hibernate.connection.password=sccb
#hibernate.dialect=org.hibernate.dialect.MySQLDialect